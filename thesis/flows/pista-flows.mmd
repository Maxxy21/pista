%% Pista Flows (styled to match thesis figures)

%% 1) Authentication & Landing
flowchart TB
  subgraph subGraph0["Landing Page Components"]
    Hero["Hero Section"]
    LandingPage["Landing Page"]
    HowItWorks["How It Works"]
    CTAs["Get Started"]
  end

  subgraph subGraph1["Landing Flow"]
    Entry("User Visits Site")
    subGraph0
    SignUpFlow["Sign Up"]
    LoginFlow["Login"]
  end

  subgraph Authentication["Authentication"]
    ClerkAuth["Clerk Authentication"]
    Middleware["Next.js Middleware (/dashboard)"]
    Dashboard["Dashboard"]
  end

  Entry --> LandingPage
  LandingPage --> Hero & HowItWorks & CTAs
  CTAs -- Sign Up --> SignUpFlow
  CTAs -- Login --> LoginFlow
  SignUpFlow --> ClerkAuth
  LoginFlow --> ClerkAuth
  ClerkAuth --> Middleware --> Dashboard

  classDef landingNode fill:#f3e5f5,stroke:#9c27b0
  classDef authNode fill:#e1f5fe,stroke:#0288d1
  classDef mainNode fill:#f3e5f5,stroke:#7b1fa2
  classDef aiNode fill:#fff3e0,stroke:#ff9800
  classDef openaiNode fill:#fce4ec,stroke:#e91e63
  classDef dbNode fill:#e8f5e9,stroke:#388e3c
  classDef displayNode fill:#f1f8e9,stroke:#689f38

  class Hero,LandingPage,HowItWorks,CTAs,Entry landingNode
  class SignUpFlow,LoginFlow,ClerkAuth,Middleware,Dashboard authNode

%% 2) Pitch Submission (Q&A required)
flowchart TB
  subgraph subGraph3["Pitch Creation"]
    Dashboard2["Dashboard"]
    PitchForm["Pitch Creation Form"]
    ContentType["Select: Text | Audio | Text File"]
    AudioUpload["Audio Upload"]
    Transcribe["/api/transcribe (audio → text)"]
    TextReady["Pitch Text Ready"]
    GenQuestions["/api/generate-questions"]
    AnswerQA["Answer up to 3 Questions"]
    Review["Review"]
    Evaluate["/api/evaluate (text + Q&A)"]
    CreatePitch["Save Pitch (convex.pitches.create)"]
    PitchList["List of Pitches"]
  end

  subgraph subGraph6["Database Operations"]
    Convex[("Convex Database")]
  end

  subgraph subGraph8["Pitch Details"]
    PitchDetails["Pitch Details View (/pitch/:id)"]
    Score["Overall Score"]
    Breakdown["Criteria Breakdown"]
    Suggestions["Improvement Suggestions"]
  end

  Dashboard2 -- Create New --> PitchForm
  PitchForm --> ContentType
  ContentType -->|Text| TextReady
  ContentType -->|Text File| TextReady
  ContentType -->|Audio| AudioUpload --> Transcribe --> TextReady
  TextReady --> GenQuestions --> AnswerQA --> Review --> Evaluate --> CreatePitch
  CreatePitch --> PitchList
  PitchList -- Select --> PitchDetails
  PitchDetails -- View --> Score & Breakdown & Suggestions
  PitchDetails -- Edit --> PitchForm

  %% DB reads/writes (dashed)
  PitchList -. Read .-> Convex
  CreatePitch -. Write .-> Convex

  class Dashboard2,PitchForm,ContentType,AudioUpload,Transcribe,TextReady,GenQuestions,AnswerQA,Review,Evaluate,CreatePitch,PitchList mainNode
  class Convex dbNode
  class PitchDetails,Score,Breakdown,Suggestions displayNode
  style Convex fill:#FFD600
  style subGraph6 fill:none

%% 3) Evaluation Pipeline
flowchart TB
  subgraph subGraph4["OpenAI Processing"]
    OpenAI["OpenAI API"]
    ProblemSolutionFit["Problem-Solution Fit"]
    BusinessModel["Business Model & Market"]
    TeamExecution["Team & Execution"]
    PresentationQuality["Pitch Quality"]
  end

  subgraph subGraph5["AI Evaluation Process"]
    BuildContent["Build Content (Pitch + Q&A)"]
    Prompting["Rubric-Anchored Prompts (per criterion)"]
    ParseJSON["Parse JSON → Evaluation"]
    CollectScores["Collect 4 Evaluations"]
    WeightScore["Weighted Overall Score"]
    DetailedFeedback["Structured Feedback"]
    Finalize["Return Result"]
  end

  BuildContent --> Prompting --> OpenAI
  OpenAI -- Analyze --> ProblemSolutionFit & BusinessModel & TeamExecution & PresentationQuality
  OpenAI -- Return --> ParseJSON --> CollectScores --> WeightScore --> DetailedFeedback --> Finalize

  class OpenAI openaiNode
  class ProblemSolutionFit,BusinessModel,TeamExecution,PresentationQuality aiNode
  class BuildContent,Prompting,ParseJSON,CollectScores,WeightScore,DetailedFeedback,Finalize mainNode
